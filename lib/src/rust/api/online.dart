// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.3.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<RwLockWebDriver> initDriver({dynamic hint}) =>
    RustLib.instance.api.initDriver(hint: hint);

Future<bool> isWebdriverRunning({dynamic hint}) =>
    RustLib.instance.api.isWebdriverRunning(hint: hint);

Future<void> startWebdriver({dynamic hint}) =>
    RustLib.instance.api.startWebdriver(hint: hint);

Future<String> getDriverPath({dynamic hint}) =>
    RustLib.instance.api.getDriverPath(hint: hint);

Future<bool> downloadDriver({required String driverDir, dynamic hint}) =>
    RustLib.instance.api.downloadDriver(driverDir: driverDir, hint: hint);

Future<String> getDriverDir({dynamic hint}) =>
    RustLib.instance.api.getDriverDir(hint: hint);

Future<String> getAppHomeDir({dynamic hint}) =>
    RustLib.instance.api.getAppHomeDir(hint: hint);

Future<String> getEdgeVersion({dynamic hint}) =>
    RustLib.instance.api.getEdgeVersion(hint: hint);

// Rust type: flutter_rust_bridge::RustOpaque<std::sync::RwLock<WebDriver>>
@sealed
class RwLockWebDriver extends RustOpaque {
  RwLockWebDriver.dcoDecode(dynamic wire) : super.dcoDecode(wire, _kStaticData);

  RwLockWebDriver.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_RwLockWebDriver,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_RwLockWebDriver,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_RwLockWebDriverPtr,
  );
}
