// Open a page
task visit [url:url] {
    webdriver post "/session/{session_id}/$url"
}

// Click an element
task click [on:element] {
    webdriver post "/session/{session_id}/element/$element_id/click"
}

// below is a mapping of an emo task to rust code
// the rust code is compiled into a library and loaded by the emo runtime
// when the compiler comes accross a task matching "type" [:text] [on:element] it will
// call the rust function with the same name and pass in the context and the arguments
// the rust function must return a Result<(), String> where the error is a string
// this way we are able to easily add new capabilities to the language
// eg: type "hello world" on "input[name='q']"
define type [:text] [on:element] {
    let web_driver = ctx.get_web_driver()
    let element = web_driver.find_element_by_id(element_id)
    element.send_keys(text)
    Ok(())
}