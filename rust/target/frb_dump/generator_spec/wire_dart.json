{
  "misc": {
    "wire_class": {
      "common": [],
      "io": [
        {
          "header": {
            "file_top": "",
            "import": "import 'dart:ffi' as ffi;",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": "// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names\n// AUTO GENERATED FILE, DO NOT EDIT.\n//\n// Generated by `package:ffigen`.\n// ignore_for_file: type=lint\n\n/// generated by flutter_rust_bridge\nclass RustLibWire implements BaseWire {\n\n                factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>\n                  RustLibWire(lib.ffiDynamicLibrary);\n                \n  /// Holds the symbol lookup function.\n  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)\n      _lookup;\n\n  /// The symbols are looked up in [dynamicLibrary].\n  RustLibWire(ffi.DynamicLibrary dynamicLibrary)\n      : _lookup = dynamicLibrary.lookup;\n\n  /// The symbols are looked up with [lookup].\n  RustLibWire.fromLookup(\n      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)\n          lookup)\n      : _lookup = lookup;\n\n  void dart_fn_deliver_output(\n    int call_id,\n    ffi.Pointer<ffi.Uint8> ptr_,\n    int rust_vec_len_,\n    int data_len_,\n  ) {\n    return _dart_fn_deliver_output(\n      call_id,\n      ptr_,\n      rust_vec_len_,\n      data_len_,\n    );\n  }\n\n  late final _dart_fn_deliver_outputPtr = _lookup<\n      ffi.NativeFunction<\n          ffi.Void Function(ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32,\n              ffi.Int32)>>('dart_fn_deliver_output');\n  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr\n      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();\n\n  void wire_my_custom_func(\n    int port_,\n    int a,\n    int b,\n  ) {\n    return _wire_my_custom_func(\n      port_,\n      a,\n      b,\n    );\n  }\n\n  late final _wire_my_custom_funcPtr = _lookup<\n          ffi\n          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(\n      'wire_my_custom_func');\n  late final _wire_my_custom_func =\n      _wire_my_custom_funcPtr.asFunction<void Function(int, int, int)>();\n\n  int dummy_method_to_enforce_bundling() {\n    return _dummy_method_to_enforce_bundling();\n  }\n\n  late final _dummy_method_to_enforce_bundlingPtr =\n      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(\n          'dummy_method_to_enforce_bundling');\n  late final _dummy_method_to_enforce_bundling =\n      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();\n}\n\n\n\n\n\n\n"
        }
      ],
      "web": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": "class RustLibWire extends BaseWire {\n            RustLibWire.fromExternalLibrary(ExternalLibrary lib);\n\n            void dart_fn_deliver_output(int call_id,PlatformGeneralizedUint8ListPtr ptr_,int rust_vec_len_,int data_len_) => wasmModule.dart_fn_deliver_output(call_id,ptr_,rust_vec_len_,data_len_);\n\nvoid wire_my_custom_func(NativePortType port_,int a,int b) => wasmModule.wire_my_custom_func(port_,a,b);\n        }\n        @JS('wasm_bindgen') external RustLibWasmModule get wasmModule;\n\n        @JS() @anonymous class RustLibWasmModule implements WasmModule {\n            @override\n            external Object /* Promise */ call([String? moduleName]);\n\n            @override\n            external RustLibWasmModule bind(dynamic thisArg, String moduleName);\n\n            external void dart_fn_deliver_output(int call_id,PlatformGeneralizedUint8ListPtr ptr_,int rust_vec_len_,int data_len_);\n\nexternal void wire_my_custom_func(NativePortType port_,int a,int b);\n        }\n        "
        }
      ]
    },
    "boilerplate": {
      "common": [
        {
          "header": {
            "file_top": "// This file is automatically generated, so please do not edit it.\n// Generated by `flutter_rust_bridge`@ 2.0.0-dev.3.\n\n// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables\n",
            "import": "\n                    import 'api/simple.dart';\n\n    import 'dart:convert';\n    import 'dart:async';\n    \n                    import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';\n                    import 'frb_generated.io.dart' if (dart.library.html) 'frb_generated.web.dart';\n                    ",
            "part": ""
          },
          "body_top": "\n                /// Main entrypoint of the Rust API\n                class RustLib extends BaseEntrypoint<RustLibApi, RustLibApiImpl, RustLibWire> {\n                  @internal\n                  static final instance = RustLib._();\n\n                  RustLib._();\n\n                  /// Initialize flutter_rust_bridge\n                  static Future<void> init({\n                    RustLibApi? api,\n                    BaseHandler? handler,\n                    ExternalLibrary? externalLibrary,\n                  }) async {\n                    await instance.initImpl(\n                      api: api,\n                      handler: handler,\n                      externalLibrary: externalLibrary,\n                    );\n                  }\n                  \n                  /// Dispose flutter_rust_bridge\n                  ///\n                  /// The call to this function is optional, since flutter_rust_bridge (and everything else)\n                  /// is automatically disposed when the app stops.\n                  static void dispose() => instance.disposeImpl();\n\n                  @override\n                  ApiImplConstructor<RustLibApiImpl, RustLibWire> get apiImplConstructor => RustLibApiImpl.new;\n\n                  @override\n                  WireConstructor<RustLibWire> get wireConstructor => RustLibWire.fromExternalLibrary;\n\n                  @override\n                  ExternalLibraryLoaderConfig get defaultExternalLibraryLoaderConfig => kDefaultExternalLibraryLoaderConfig;\n                  \n                  static const kDefaultExternalLibraryLoaderConfig = ExternalLibraryLoaderConfig(\n                    stem: 'rust_lib',\n                    ioDirectory: 'rust/target/release/',\n                    webPrefix: 'pkg/',\n                  );\n                }\n                ",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        }
      ],
      "io": [
        {
          "header": {
            "file_top": "// This file is automatically generated, so please do not edit it.\n// Generated by `flutter_rust_bridge`@ 2.0.0-dev.3.\n\n// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables\n",
            "import": "\n                    import 'api/simple.dart';\n\n    import 'dart:convert';\n    import 'dart:async';\n    \n                    import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';\n                    import 'frb_generated.dart';\n                    ",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        }
      ],
      "web": [
        {
          "header": {
            "file_top": "// This file is automatically generated, so please do not edit it.\n// Generated by `flutter_rust_bridge`@ 2.0.0-dev.3.\n\n// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables\n",
            "import": "\n                    import 'api/simple.dart';\n\n    import 'dart:convert';\n    import 'dart:async';\n    \n                    import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';\n                    import 'frb_generated.dart';\n                    ",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        }
      ]
    },
    "api_impl_normal_functions": [
      {
        "header": {
          "file_top": "",
          "import": "",
          "part": ""
        },
        "body_top": "",
        "api_class_body": "Future<int> myCustomFunc({required int a , required int b , dynamic hint});\n\n",
        "api_impl_class_body": "@override Future<int> myCustomFunc({required int a , required int b , dynamic hint}) {\n            return handler.executeNormal(NormalTask(\n                callFfi: (port_) {\n                  var arg0 = cst_encode_i_32(a);\nvar arg1 = cst_encode_i_32(b);\n            return wire.wire_my_custom_func(port_, arg0, arg1);\n            \n                },\n                codec: \n        DcoCodec(\n          decodeSuccessData: dco_decode_i_32,\n          decodeErrorData: null,\n        )\n        ,\n                constMeta: kMyCustomFuncConstMeta,\n                argValues: [a, b],\n                apiImpl: this,\n                hint: hint,\n            ));\n        }\n\n\n        TaskConstMeta get kMyCustomFuncConstMeta => const TaskConstMeta(\n            debugName: \"my_custom_func\",\n            argNames: [\"a\", \"b\"],\n        );\n        \n\n",
        "api_impl_class_methods": [],
        "body": ""
      }
    ],
    "extra_functions": {
      "common": [],
      "io": [],
      "web": []
    }
  },
  "rust2dart": {
    "inner": {
      "common": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int dco_decode_i_32(dynamic raw)",
              "body": "return raw as int;"
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "void dco_decode_unit(dynamic raw)",
              "body": "return;"
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int sse_decode_i_32(SseDeserializer deserializer)",
              "body": "return deserializer.buffer.getInt32();"
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "void sse_decode_unit(SseDeserializer deserializer)",
              "body": ""
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "bool sse_decode_bool(SseDeserializer deserializer)",
              "body": "return deserializer.buffer.getUint8() != 0;"
            }
          ],
          "body": ""
        }
      ],
      "io": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int dco_decode_i_32(dynamic raw)",
              "body": null
            },
            {
              "signature": "void dco_decode_unit(dynamic raw)",
              "body": null
            },
            {
              "signature": "int sse_decode_i_32(SseDeserializer deserializer)",
              "body": null
            },
            {
              "signature": "void sse_decode_unit(SseDeserializer deserializer)",
              "body": null
            },
            {
              "signature": "bool sse_decode_bool(SseDeserializer deserializer)",
              "body": null
            }
          ],
          "body": ""
        }
      ],
      "web": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int dco_decode_i_32(dynamic raw)",
              "body": null
            },
            {
              "signature": "void dco_decode_unit(dynamic raw)",
              "body": null
            },
            {
              "signature": "int sse_decode_i_32(SseDeserializer deserializer)",
              "body": null
            },
            {
              "signature": "void sse_decode_unit(SseDeserializer deserializer)",
              "body": null
            },
            {
              "signature": "bool sse_decode_bool(SseDeserializer deserializer)",
              "body": null
            }
          ],
          "body": ""
        }
      ]
    }
  },
  "dart2rust": {
    "inner": {
      "common": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int cst_encode_i_32(int raw)",
              "body": "return raw;"
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "void cst_encode_unit(void raw)",
              "body": "return raw;"
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "void sse_encode_i_32(int self, SseSerializer serializer)",
              "body": "serializer.buffer.putInt32(self);"
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "void sse_encode_unit(void self, SseSerializer serializer)",
              "body": ""
            }
          ],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "void sse_encode_bool(bool self, SseSerializer serializer)",
              "body": "serializer.buffer.putUint8(self ? 1 : 0);"
            }
          ],
          "body": ""
        }
      ],
      "io": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int cst_encode_i_32(int raw)",
              "body": null
            },
            {
              "signature": "void cst_encode_unit(void raw)",
              "body": null
            },
            {
              "signature": "void sse_encode_i_32(int self, SseSerializer serializer)",
              "body": null
            },
            {
              "signature": "void sse_encode_unit(void self, SseSerializer serializer)",
              "body": null
            },
            {
              "signature": "void sse_encode_bool(bool self, SseSerializer serializer)",
              "body": null
            }
          ],
          "body": ""
        }
      ],
      "web": [
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [],
          "body": ""
        },
        {
          "header": {
            "file_top": "",
            "import": "",
            "part": ""
          },
          "body_top": "",
          "api_class_body": "",
          "api_impl_class_body": "",
          "api_impl_class_methods": [
            {
              "signature": "int cst_encode_i_32(int raw)",
              "body": null
            },
            {
              "signature": "void cst_encode_unit(void raw)",
              "body": null
            },
            {
              "signature": "void sse_encode_i_32(int self, SseSerializer serializer)",
              "body": null
            },
            {
              "signature": "void sse_encode_unit(void self, SseSerializer serializer)",
              "body": null
            },
            {
              "signature": "void sse_encode_bool(bool self, SseSerializer serializer)",
              "body": null
            }
          ],
          "body": ""
        }
      ]
    }
  }
}